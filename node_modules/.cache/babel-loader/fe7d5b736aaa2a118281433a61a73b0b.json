{"ast":null,"code":"import _classCallCheck from\"/home/jordanyamada/projects/courses/401/lab26/resty/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/jordanyamada/projects/courses/401/lab26/resty/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/jordanyamada/projects/courses/401/lab26/resty/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/jordanyamada/projects/courses/401/lab26/resty/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import'./app.scss';// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from'./components/header';import Footer from'./components/footer';import Form from'./components/form';import Results from'./components/results';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.callApi=function(requestParams){// mock output\nvar data={count:2,results:[{name:'fake thing 1',url:'http://fakethings.com/1'},{name:'fake thing 2',url:'http://fakethings.com/2'}]};_this.setState({data:data,requestParams:requestParams});};_this.state={data:null,requestParams:{}};return _this;}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Request Method: \",this.state.requestParams.method]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"URL: \",this.state.requestParams.url]}),/*#__PURE__*/_jsx(Form,{handleApiCall:this.callApi}),/*#__PURE__*/_jsx(Results,{data:this.state.data}),/*#__PURE__*/_jsx(Footer,{})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/jordanyamada/projects/courses/401/lab26/resty/src/app.js"],"names":["React","Header","Footer","Form","Results","App","props","callApi","requestParams","data","count","results","name","url","setState","state","method","Component"],"mappings":"ohBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,YAAP,CAEA;AACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,C,2FAEMC,CAAAA,G,sGAEJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EADiB,MAQnBC,OARmB,CAQT,SAACC,aAAD,CAAmB,CAC3B;AACA,GAAMC,CAAAA,IAAI,CAAG,CACXC,KAAK,CAAE,CADI,CAEXC,OAAO,CAAE,CACP,CAACC,IAAI,CAAE,cAAP,CAAuBC,GAAG,CAAE,yBAA5B,CADO,CAEP,CAACD,IAAI,CAAE,cAAP,CAAuBC,GAAG,CAAE,yBAA5B,CAFO,CAFE,CAAb,CAOA,MAAKC,QAAL,CAAc,CAACL,IAAI,CAAJA,IAAD,CAAOD,aAAa,CAAbA,aAAP,CAAd,EACD,CAlBkB,CAEjB,MAAKO,KAAL,CAAa,CACXN,IAAI,CAAE,IADK,CAEXD,aAAa,CAAE,EAFJ,CAAb,CAFiB,aAMlB,C,sCAcD,iBAAS,CACP,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,MAAD,IADF,cAEE,0CAAsB,KAAKO,KAAL,CAAWP,aAAX,CAAyBQ,MAA/C,GAFF,cAGE,+BAAW,KAAKD,KAAL,CAAWP,aAAX,CAAyBK,GAApC,GAHF,cAIE,KAAC,IAAD,EAAM,aAAa,CAAE,KAAKN,OAA1B,EAJF,cAKE,KAAC,OAAD,EAAS,IAAI,CAAE,KAAKQ,KAAL,CAAWN,IAA1B,EALF,cAME,KAAC,MAAD,IANF,GADF,CAUD,C,iBAjCeT,KAAK,CAACiB,S,EAoCxB,cAAeZ,CAAAA,GAAf","sourcesContent":["import React from 'react';\n\nimport './app.scss';\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      requestParams: {},\n    };\n  }\n\n  callApi = (requestParams) => {\n    // mock output\n    const data = {\n      count: 2,\n      results: [\n        {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n        {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n      ],\n    };\n    this.setState({data, requestParams});\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div>Request Method: {this.state.requestParams.method}</div>\n        <div>URL: {this.state.requestParams.url}</div>\n        <Form handleApiCall={this.callApi} />\n        <Results data={this.state.data} />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}